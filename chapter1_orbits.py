# -*- coding: utf-8 -*-
"""chapter1_orbits.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1F9x4gdw0OyAsWpffWoxPcFLCDxvtJKKH
"""

import numpy as np
import matplotlib.pyplot as plt
from math import *
import pandas as pd

"""## 1.1: Newton's law of gravity

Starting with the basic formulation of the force due to gravity,

$$ F_g = -\frac{GMm}{r^2}\frac{\vec{r}}{r}$$

Where $\vec{r}$ is the radial vector connecting the center of two spherical bodies, $G$ is the gravitational constant, $M$ and $m$ are the masses of the two, and $r$ is the magnitude of the vector connecting them.

## 1.2 The N-body problem

Considering a system of masses, the force $F_{gn}$ exerted on $m_i$ by $m_n$ is

$$ \boldsymbol{F}_{gn} = - \frac{G m_i m_n}{r_{ni}^3}\boldsymbol{r}_{ni}$$

where $ r_{ni} = \boldsymbol{r}_i - \boldsymbol{r}_n $, and the sum for all gravitational forces acting on the $i^{th}$ body is

$$ \boldsymbol{F}_g = -\frac{Gm_im_1}{r^3_{1i}}\boldsymbol{r}_{1i} - \frac{Gm_im_2}{r^3_{2i}}\boldsymbol{r}_{2i} -...-\frac{Gm_im_n}{r^3_{ni}}\boldsymbol{r}_{ni}$$

$$ \boldsymbol{F}_g = -Gm_i \sum^n_{j=1}\frac{m_j}{r_{ji}^3}\boldsymbol{r}_{ji} \ \ , \ \ j\neq i$$

For a body in orbit, we can lump up all the other forces into an "other" term for now, and say

$$\boldsymbol{F}_{total} = \boldsymbol{F}_g + \boldsymbol{F}_{other}$$        

and apply Newton's second law of motion

$$ \frac{d}{dt}(m_i\boldsymbol{v_i})=\boldsymbol{F}_{total} $$

where the time derivative expands to

$$m_i\frac{d\boldsymbol{v}_i}{dt} + \boldsymbol{v}_i\frac{dm_i}{dt} = \boldsymbol{F}_{total} $$

The second term is relevant for rocket motors or most other means of propulsion, which expel mass to produce thrust.

We can divide through by the mass to obtain the most general equation of motion

$$\ddot{\boldsymbol{r}}_i = \frac{\boldsymbol{F}_{total}}{m_i} - \dot{\boldsymbol{r}}_i\frac{\dot{m}_i}{m_i}$$

where $\ddot{\boldsymbol{r}}_i$ is the acceleration vector relative to the x,y,z coordinate system.  

Assuming a body in orbit that is not firing its engines, and is not subject to drag or other external forces, we have only gravity to consider and the equation reduces to

$$\ddot{\boldsymbol{r}}_i = -G\sum^n_{j=1} \frac{m_j}{r_{ji}^3}(\boldsymbol{\bar{r}}_{ji})$$

For an Earth satellite, $m_2$ and the Earth, $m_1$,

$$\ddot{\boldsymbol{r}}_1 = -G\sum^n_{j=2} \frac{m_j}{r_{j1}^3}(\boldsymbol{r}_{j1})$$
$$\ddot{\boldsymbol{r}}_2 = -G\sum^n_{j=1} \frac{m_j}{r_{j2}^3}(\boldsymbol{r}_{j2}) \ \ , j \neq 2$$

Using the relation

$$\boldsymbol{r}_{12} = \boldsymbol{r}_2 - \boldsymbol{r}_1$$

to say

$$\ddot{\boldsymbol{r}}_{12} = \ddot{\boldsymbol{r}}_2 - \ddot{\boldsymbol{r}}_1$$

we can then substitute these back to get

$$\ddot{\boldsymbol{r}}_{12} = -G\sum^n_{j=1} \frac{m_j}{r_{j2}^3}(\boldsymbol{r}_{j2}) + G\sum^n_{j=2} \frac{m_j}{r_{j1}^3}(\boldsymbol{r}_{j1})$$

and we can expand this to get

$$\ddot{\boldsymbol{r}}_{12} = -\left[\frac{Gm_1}{r_{12}^3}(\boldsymbol{r}_{12}) + G\sum^n_{j=3}\frac{m_j}{r_{j2}^3}(\boldsymbol{r}_{j2})\right] -
\left[\frac{Gm_2}{r_{21}^3}(\boldsymbol{r}_{21}) + G\sum^n_{j=3}\frac{m_j}{r_{j1}^3}(\boldsymbol{r}_{j1})\right]
$$

and because $\boldsymbol{r}_{12} = -\boldsymbol{r}_{21}$, we can combine the first terms in each bracket to simplify to

$$ \ddot{\boldsymbol{r}}_{12} = \frac{G(m_1 + m_2)}{r_{12}^3}(\boldsymbol{r}_{12}) - \sum^n_{j=3}Gm_j\left(\frac{\boldsymbol{r}_{j2}}{r^3_{j2}} - \frac{\boldsymbol{r_{j1}}}{r_{j1}^3}\right) $$

Where the second term accounts for the perturbing effects of the moon, sun and planets on a near Earth satellite.

## 1.3 Two-body Problem

Considering a satellite in orbit of a planet, where $m_2 << m_1$,

$$G(m_1 + m_2) \approx Gm_1$$

We can apply Newton's laws to the previous equation of motion obtain

$$ m\ddot{\boldsymbol{r}}_m = -\frac{GMm}{r^2}\frac{\boldsymbol{r}}{r}$$

And because then simplify for $m<<M$
$$ \ddot{\boldsymbol{r}}_m = -\frac{GM}{r^3}\boldsymbol{r}$$

Where we can express the Earth's gravitational parameter

$$\mu \equiv GM $$

to get the two-body equation of motion for a satellite in orbit around the Earth

$$\ddot{\boldsymbol{r}} + \frac{\mu}{r^3}\boldsymbol{r} = 0 $$

## 1.4 Two-body orbital mechanics

We can define a satellite's coordinates in relation to a central body, where its position and velocity can be described by the vector

$$ \boldsymbol{r} = ( X, Y, Z, ) \ , \ \boldsymbol{v} = \dot{\boldsymbol{r}} =  (X', Y', Z') \ , \ \dot{\boldsymbol{v}} = \ddot{\boldsymbol{r}}$$

![Flight](figures\flightpathangle.jpg "Flight Path Angle")

Taking the dot product of the equation of motion and the velocity vector, and using the relations above,

$$\dot{\boldsymbol{r}} \cdot \ddot{\boldsymbol{r}} + \dot{\boldsymbol{r}} \cdot \frac{\mu}{r^3}\boldsymbol{r} = 0 $$

$$ v\dot{v} + \frac{\mu}{r^3}r\dot{r} = 0 $$

We can look at the above equation and see that we can also write

$$\frac{d}{dt} \left(\frac{v^2}{2}\right) + \frac{d}{dt}\left(-\frac{\mu}{r}\right) = 0 $$

$$ \frac{d}{dt}\left(\frac{v^2}{2} - \frac{\mu}{r}\right) = 0$$

Because the rate of change of time is zero, the expression must be constant. This is called the specific mechanical energy of an orbit, $\epsilon$

$$\epsilon = \frac{v^2}{2} - \frac{\mu}{r} $$

The angular momentum of an orbit is constant, and can be dereived by following a similar approach as above, but with the cross product of the position and equation of motion. Again, the time derivative of this expression is 0, which again implies the expression is constant. This yields another constant, specific angular momentum $\boldsymbol{h}$

$$\boldsymbol{h} = \boldsymbol{r}\times \boldsymbol{v}$$

Because $\boldsymbol{h}$ is constant, this implies it is _always_ perpendicular to the plane of orbit, telling us that the orbit must always remain in the same plane.

Referencing the diagram aboce, we can define the magnitude of the specific angular momentum as

$$h = rv\sin(\gamma) = rv\cos(\phi)$$

### Example: Calculating specific angular momentum and specific mechanical energy

Given

$$\boldsymbol{r} = (4.1852\boldsymbol{I} + 6.2778 \boldsymbol{J} + 10.463\boldsymbol{K})10^7 \text{ ft} $$

$$\boldsymbol{v} = (2.5936\boldsymbol{I} + 5.1872 \boldsymbol{J})10^4 \text{ ft}/\text{sec}$$

Find $\epsilon$ and $\boldsymbol{h}$
"""

# Define gravitational parameter
mu = 398600 # (km^3 / sec^2)

# Position
r = [4.1852e7, 6.2778e7, 10.463e7] #10^7 ft
mag_r = np.linalg.norm(r)
print("r: {:.5e}".format(mag_r), "ft")

# Velocity
v = [2.593e4, 5.1872e4, 0] #10^4 ft/sec
mag_v = np.linalg.norm(v)
print("v: {:.5e}".format(mag_v), "ft/sec")

# Specific mechanical energy
eps = (mag_v**2 / 2) - (mu / mag_r)
print("\u03B5: {:.5e}".format(eps), f"ft² / sec²")

# Specific angular momentum
h = np.cross(r,v)
print("\033[1mh\033[0m: [{:.5e}, {:.5e}, {:.5e}]".format(h[0], h[1], h[2]), f"ft² / sec")
mag_h = np.linalg.norm(h)
print("h: {:.5e}".format(mag_h), "ft²/sec")

# Flight path angle h=rvcos(phi) -> cos(phi) = h/rv
phi = np.arccos(mag_h/(mag_r*mag_v))*(180/np.pi)
print("\u03C6: {:.5}".format(phi), "degrees")

"""## 1.5 The Trajectory Equation

### Integration of the equation of motion

We can integrate the equation of motion by first crossing the equation to h to get it in an integrateable form

$$\ddot{\boldsymbol{r}} \times \boldsymbol{h} = \frac{\mu}{r^3}(\boldsymbol{r} \times \boldsymbol{h}) $$

$$\ddot{\boldsymbol{r}} \times \boldsymbol{h} = \frac{\mu}{r}$$

Where the left side of the equation is

$$ \frac{d}{dt}(\dot{\boldsymbol{r}} \times \boldsymbol{h}) = \ddot{\boldsymbol{r}} \times \boldsymbol{h} $$

We want the right side of the equation to also relate to a time rate of change

$$\frac{\mu}{r^3} (\boldsymbol{h} \times \boldsymbol{r}) = \frac{\mu}{r}\boldsymbol{v} - \frac{\mu \dot{r}}{r^3}\boldsymbol{r} $$

Which can be rewritten as

$$\frac{d}{dt}(\dot{\boldsymbol{r}}\times\boldsymbol{h}) = \mu \frac{d}{dt}\left(\frac{\boldsymbol{r}}{r}\right)$$

And then integrated to get

$$\dot{\boldsymbol{r}}\times\boldsymbol{h} = \mu\frac{\boldsymbol{r}}{r} + \boldsymbol{B} $$

Where $\boldsymbol{B}$ is the vector constant of integration. Dotting this equation by $\boldsymbol{r}$ gives a scalar equation

$$\boldsymbol{r} \cdot \dot{\boldsymbol{r}} \times \boldsymbol{h} = \boldsymbol{r} \cdot \mu \frac{\boldsymbol{r}}{r} + \boldsymbol{r} \cdot \boldsymbol{B} $$

Using $a\cdot b \times c = a \times b \cdot c $

$$h^2 = \mu r + rB \cos(\nu)$$

Where $\nu$ is the angle between the constant vector $\boldsymbol{B}$ and the radial vector $\boldsymbol{r}$

Solving for r yields

$$ r = \frac{h^2 / \mu}{1 + (B/\mu)\cos(\nu)} $$

This can now be compared to the general equation of a conic section written in polar coordinates

$$r = \frac{p}{1 + e\cos(\nu)} $$

Where p is a geometrical constant of the conic called the parameter, or semi-latus rectum, and e is the eccentricity of the orbit.

![Conic](figures/conicsectioneq.png)

We can now sum up our findings in five rules

1. The family of curves called "conic sections" are the only possible paths for an orbiting object in the two-body problem
2. The focus of the conic orbit must be located at the center of the central body
3. The mechanical energy of a satellite does not change as the satellite moves along its orbit, but the potential and kinetic energies do have an exchange so that the satellite speeds up as r decreases, and speeds up as r increases.
4. The orbital motion takes place in a plane which is fixed in inertial space.
5. The specific angular momentum of a satellite about the central attracting body remains constant. The flight path angle $\phi$ changes to keep $\boldsymbol{h}$ constant.

We then have equations to find the various dimensions of an orbit: eccentricity $e$, semi-major axis $a$, the periapsis $r_p$ and the apoapsis $r_a$

$$e = \frac{c}{a} \ , \ p =a(1-e^2) $$

$$ r_p = \frac{p}{1+e} = a(1-e) \ , \ r_a = \frac{p}{1-e} = a(1+e) $$

$$ e = \frac{\boldsymbol{v}\times\boldsymbol{h}}{\mu} - \frac{\boldsymbol{r}}{r} $$

And we have the eccentricity vector

$$ \mu e = (v^2 - \frac{\mu}{r})\boldsymbol{r} - (\boldsymbol{r} \cdot \boldsymbol{v})\boldsymbol{v} $$

## 1.6 Relating $\epsilon$ and $\boldsymbol{h}$ to the geometry of an orbit

For any orbit, the semi-latus rectum $p$ depends only on the specific angular momentum of the satellite

$$ p = \frac{\boldsymbol{h}^2}{\mu} $$

At the apoapsis or periapsis, we can also write

$$\boldsymbol{h} = r_p v_p = r_a v_a $$

When we write the equation for specific mechanical energy using the periapsis point, we get

$$\epsilon = \frac{v^2}{2} - \frac{\mu}{r} = \frac{h^2}{2r^2_p} - \frac{\mu}{r_p}$$

From here, we can use the relations

$$r_p = a(1-e) \ , \ \boldsymbol{h}^2 = \mu a (1-e^2)$$

To substitue and get

$$\epsilon = \frac{\mu a (1-e^2)}{2a^2(1-e)^2} - \frac{\mu}{a(1-e)}$$

Which reduces to
$$ \epsilon = -\frac{\mu}{2a} $$

This is a simple relationship, valid for all conic orbits, that tells us that the semi major axis of an orbit depends only on the specific mechanical energy of the satellite (which in turn depends only on $\boldsymbol{r}$ and $\boldsymbol{v}$)

When examining this relationship in terms of how $a$ behaves for different orbits, we can see that the specific mechanical energy will be negative for closed orbits (where a<1), 0 for a parabolic orbit where $a$ is infinite, and positive for a hyperbolic orbit where $a$ is negative.

Because $h$ determines $p$, and $\epsilon$ determines $a$, together the two determine $e$ and specify the exact shape of an orbit.

$$ e = \sqrt{1 + \frac{2\epsilon\boldsymbol{h}^2}{\mu^2}} $$

And again we can see the relations to the conic orbits where, for example, if $\epsilon = 0$, $e=1$.
"""

# Example problem: determine specific angular momentum, semi-latus rectum, and semi-major axis for a given satellite with eps = -2.0e8 ft^2/sec^2, e=0.2

# semi-major axis first, eps = -mu/2a --> a = -mu/2eps
def get_parameters():
    e = float(input("Enter eccentricity:"))
    eps = float(input("Enter specific mechanical energy:"))
    a = -mu/(2*eps)

    p=a*(1-e**2)
    h = np.sqrt(p*mu)

    print("a: {:.5e}".format(a), "ft")
    print("p: {:.5e}".format(p), "ft")
    print("h: {:.5e}".format(h), "ft^2/sec")
    return a, p, h

a, p ,h = get_parameters()

## Example 2: a radar tracking station shows a satellite has e=0.1, and r_p = 200n.mi, determine altitude at apogee, epsion and h
mu = 398600
km_to_ft = 3280.84
nmi_to_ft = 6076.12
mu_ft = mu*(km_to_ft**3)
e=0.1

# First calculate actual perigee from altitude of perigee
r_p_alt = 200 #nautical miles
r_p_act = (3443.8) + r_p_alt # radius from earth center in n.mi
r_p_act_ft = r_p_act*nmi_to_ft

# Semi-latus rectum
p = r_p_act_ft*(1+e)

# Apogee from p
r_a_act_ft = p / (1-e)

r_a_alt_ft = r_a_act_ft - 3443.8*nmi_to_ft

# Semi-major axis from p and e
a = (r_a_act_ft + r_p_act_ft)/2

# Specific mechanical energy from a
eps = - mu_ft/(2*a)

# Specific angular momentum from a
h = np.sqrt(mu_ft*p)

print("p: {:.5e}".format(p), "ft")
print("apogee altitude: {:.5e}".format(r_a_alt_ft), "ft")
print("epsilon: {:.5e}".format(eps), "ft^2/sec^2")
print("h: {:.5e}".format(h), "ft^2/sec")

"""## 1.7 The Elliptical Orbit

Geometrical relations:

$$r_p + r_a = 2a \ , \ e = \frac{r_a - r_p}{r_a+r_p}$$

The period of an eliptical orbit is

$$TP = \frac{2\pi ab}{h} = \frac{2\pi}{\sqrt{\mu}}a^{3/2}$$

where $\pi$ab is the total area of the ellipse. This tells us the period of an elliptical orbit depends only on the size of the semi-major axis.

## 1.8 The Circular Orbit

The circular orbit is just a special case of the elliptical orbit where

$$TP_{circ} = \frac{2\pi}{\sqrt{\mu}}r_{circ}^{3/2}$$

From the equation for specific mechanical energy, we can obtain the velocity of the satellite using $a=r$

$$\epsilon = \frac{v^2}{2} - \frac{\mu}{r} = \frac{\mu}{2a}$$

$$\frac{v^2_{circ}}{2} - \frac{\mu}{r_{circ}} = -\frac{\mu}{2r_{circ}}$$

$$V_{circ} = \sqrt{\frac{\mu}{r_{circ}}}$$

## 1.9 The Parabolic Orbit

A parabolic orbit is nearly nonexistent in nature outside of some comets passing a single time through the solar system. But it does represent the borderline case between open and closed orbits.

The escape velocity for a particular body can be determined from looking at the specific mechanical energy of the orbit

$$\epsilon = \frac{v^2_{esc}}{2} - \frac{\mu}{r} = 0 $$

$$v_{esc} = \sqrt{\frac{2\mu}{r}}$$
"""

# Example problem: A space probe is to be launched on an escape trajectory from a circular parking orbit at an altitude of 100 n.mi above earth. Calculate mimumum escape speed

orbit_alt_ft = 100*nmi_to_ft
orbit_act_ft = 3443.8*nmi_to_ft + orbit_alt_ft

v_esc_ft = np.sqrt((2*mu_ft)/(orbit_act_ft))

print("Escape Velocity: {:.5f}".format(v_esc_ft), "ft/sec")

"""## 1.10 The Hyperbolic Orbit

Meteors and interplanetary probes follow hyperbolic trajectories, which is necessary if we want some speed left over after it escapes Earth's gravity.

$$ \sin \left( \frac{\delta}{2}\right) = \frac{1}{e} $$

where $\delta$ represents the angle through which a space probe would be turned by its encounter with a planet.

## Chapter one exercises

### 1.5

A satellite has a known semi-major axis of 30x$10^6$ft with eccentricity e=0.2.

- Find perigee and apogee distance from center of earth
- Find specific energy of the trajectory
- Find the semi-latus rectum of the orbit
- Find the length of the position vector at $\nu=135^{\circ}$

**Answer:**

First, looking at apogee and perigee, we can relate those to the parameter and the eccentricity

$$r_p = a(1-e)  \ , \ r_a = a(1+e)$$
"""

# Given parameters
a = 30e6 # ft
e = 0.2

# Calculate apogee and perigee
r_p = a*(1-e)
r_a = a*(1+e)

print("Apogee: {:.4e}".format(r_a), "ft")
print("Perigee: {:.4e}".format(r_p), "ft")

"""We can now get the parameter from either apogee or perigee"""

# Compute parameter from r_p = p/(1+e)

p = r_p*(1+e)
print("Parameter: {:.4e}".format(p), "ft")

"""And also get the specific mechanical energy from

$$\epsilon = -\frac{\mu}{2a} $$
"""

# Calculate epsilon
eps = -mu_ft / (2*a)

print("Epsilon: {:.4e}".format(eps), "ft^2/sec^2")

"""Lastly, we need to find the length of the position vector, which we can use

$$r = \frac{p}{1+e\cos{\nu}} $$
"""

# Calculate length of position vector
nu = 135*(np.pi/180) #deg to rad
r = p/(1+e*np.cos(nu))
print("r: {:.4e}".format(r), "ft")

"""### 1.6

Find an equation for the velocity of a satellite as a function of $\epsilon$ and $r$

**Answer:**

We can simply rearrange

$$\epsilon = \frac{v^2}{2} - \frac{\mu}{r}$$

To get

$$v^2 = 2\epsilon + \frac{2\mu}{r} $$


$$ v = \sqrt{2\epsilon + \frac{2\mu}{r}}$$

### 1.7

Prove that

$$r_a = a(1+e) $$

**Answer:**

Looking at the equation for the general equation of a conic section in polar coordinates

$$r = \frac{p}{1+e\cos{\nu}}$$

Where the apogee of an orbit occurs at a true anomaly at $\nu=\pi$

$$r_a = \frac{p}{1-e}$$

And subsitute in $p=a(1-e^2)$

$$r_a = \frac{a(1-e^2)}{1-e}$$

And simplify

$$r_a = a\left(\frac{1-e^2}{1-e}\right)$$

$$r_a = a\left(\frac{(1+e)(1-e)}{1-e}\right)$$

$$r_a = a(1+e) $$

### 1.8

Identify each of the following trajectories as circular, elliptical, hyperbolic, or parabolic:

- r = 3, v=1.5

- r_p = 1.5, p = 3

- $\epsilon$ = $-\frac{1}{3}$, p=1.5

- r= $\boldsymbol{J} + 0.2\boldsymbol{K}$, v = $0.9\boldsymbol{I} + 0.123\boldsymbol{K}$

- $\boldsymbol{r} = 1.01\boldsymbol{K}$ , $\boldsymbol{v} = \boldsymbol{I} + 1.4\boldsymbol{K}$

**Answer:**

To solve, we'll need to calculuate specific mechanical energy and use the knowledge that $\epsilon$ is:

- negative for closed orbits
- 0 for parabolic orbits
- positive for hyperbolic orbit

Using:

$$\epsilon = \frac{v^2}{2} - \frac{\mu}{r} $$

$$r_p = \frac{p}{1+e} ⟶ e = \frac{p-r_p}{r_p}$$
"""

# First
r, v = 3, 1.5
eps = (v**2)/2 - 1/r
print("1: epsilon: {:.2f}".format(eps))

# Second
r_p, p = 1.5, 3
e = (p - r_p)/(r_p)
print("2: e: {:.2f}".format(e))

# Third has a negative mechanic energy so it is closed
print("3. Epsilon is negative so the orbit is closed")
r,v = [1,0.2], [0.9,0.123]

# Fourth
mag_r, mag_v = np.linalg.norm(r), np.linalg.norm(v)
eps2 = (mag_v**2)/2 - 1/mag_r
print("4. epsilon: {:.2f}".format(eps2))

# Fifth

r,v = [0,0,1.01], [1,0,1.4]
mag_r, mag_v = np.linalg.norm(r), np.linalg.norm(v)
eps3 = (mag_v**2)/2 - 1/mag_r
print("5. epsilon: {:.2f}".format(eps3))

"""### 1.9

A space vehicle enteres the atmosphere of Earth at 300,000 ft with a velocity of 25,000 ft/sec and a flight path angle of $-60^{\circ}$.

What was its velocity and flight path angle at an altitude of 100 n. mi during descent?

**Answer:**

We need to use conservation of both energy and angular momentum

$$\epsilon = \frac{v^2}{2} - \frac{\mu}{r} $$

$$ \frac{v_1^2}{2} - \frac{\mu}{r_1} = \frac{v_2^2}{2} - \frac{\mu}{r_2} $$

$$ v^2_2 = v_1^2 + 2\mu\left(\frac{1}{r_2} - \frac{1}{r_1}\right)$$

$$ v_2 = \sqrt{v_1^2 + 2\mu\left(\frac{1}{r_2} - \frac{1}{r_1}\right)}$$

And angular momentum

$$ \boldsymbol{h} = \boldsymbol{r}\boldsymbol{v}\cos\gamma$$

$$\boldsymbol{r}_1\boldsymbol{v}_1\cos\gamma_1 = \boldsymbol{r}_2\boldsymbol{v}_2\cos\gamma_2$$

We know $r_2$, so we can rearrange the equation for angular momentum to get

$$\cos\gamma_2 = \frac{\boldsymbol{h}}{\boldsymbol{r}_2\boldsymbol{v}_2} $$

$$\gamma_2 = \cos^{-1}\left(\frac{\boldsymbol{h}}{\boldsymbol{r}_2\boldsymbol{v}_2}\right) $$
"""

# Initial parameters
mag_r_0 = 3959*5280 + 3e5 # ft
mag_v_0 = 2.5e4 # ft/sec
gamma_0 = -60*(np.pi/180) # deg to rad
h = mag_r_0*mag_v_0*np.cos(gamma_0)
eps1 = (mag_v_0**2)/2 - mu_ft/mag_r

# New parameters
mag_r_f = 3959*5280 + 100 * nmi_to_ft
mag_v_f = np.sqrt(mag_v_0**2 + 2*mu_ft*((1/mag_r_f) - (1/mag_r_0)))
gamma_f = np.arccos(h/(mag_r_f*mag_v_f))
gamma_f_deg = np.rad2deg(gamma_f)

print("Final velocity: {:.5f}".format(mag_v_f), "ft\sec")
print("Final flight path angle: {:.5f}".format(gamma_f_deg), "deg")